---
layout: 'default2'
title: 'Reply to Sam Clarke, Don’t Fail the Module'
email: 's.butterfill@warwick.ac.uk'
units: []
lecture_date: '2016/12/9'
event: 'Empathy in and with Groups'
location: 'Faculty of Humanities, University of Copenhagen'
---

//-
//- (c) Stephen A. Butterfill 2016
//-

include ../../fragments/lecture_mixins
include ../../fragments/unit_mixins
include ../../fragments/joint_action_mixins

- var images = get_images('bees')


+slide_middle({bkg:'duckling.jpeg', blend:'screen'})
  p.right.huge-glow-80(style="line-height:.9em;")
    span Modularity 
    br
    span & Disunity:
    br
    span Reply to
    br
    span Sam Clarke
  p.right s.butterfill@warwick.ac.uk


+slide_rh_white({step:true})
  +left_half
    p.center superficial features
    .hem-around-children
      p encapsulation
      p domain specificity
      p limited access
      p ...
  .notes: :t
    What is a module?
    Opponents of the claim that there are modules often suppose that we can explain
    what it is for something to be a module by giving a list of features.
    They take theoretical committment to modularity to be merely committment to the existence
    of a systems which exhibit
    informational encapsulation,
    domain specificity,
    limited access,
    and the rest.
  .notes: :t
    But Sam has argued that these features are merely superficial characteristics
    of modules.
  +right_half({step:true})
    p.center real essence
    .hem-around-children
      p rule-govered computational process 
      p distinctive representational format
    .notes: :t
      On his view,
      the fact that a system is a module explains why it exhibits these features.
      So of course being a module cannot simply consist in bearing these features.
    .notes: :t
      To repeat, modularity is something that explains these properties rather
      than something that merely consists in them.
    .notes: :t
      Going further, Sam suggests that being modular is a matter of your processes being
      rule-govered computational processes of a certain type, and of the representations you
      operate on having a distinctive representational format.
    .notes: :t
      It is these facts about the distinctively modular processes and representations
      that explain why modules evidence features like information encapsulation or domain
      specificity.
    .notes: :t
      It follows that 
      what matters in determining whether something is module
      is not the absolute degree of encapsulation (say), but rather
      whether differences in degree of encapsulation (say)  indicate 
      differences in the nature of the underlying processes and representational formats.
    .notes: :t
      A threat that Sam is aware of: opponents of modularity will retort that Sam has
      raised the bar for objections so high that nothing could show
      there are no modules!
    .notes: :t
      [As Sam writes in the paper,
      ‘Concerning how Fodorians should understand the natural kindness of modular input systems, my
      suggestion is just that modular systems might be distinguished in the human mind by an underlying
      type of computational process that governs their operations: i.e. that the essence of the modular
      kind might be a certain type of computational processing that is found in some, and only some,
      cognitive systems—the modular ones—and that entails and explains the manifestation of the
      superficial properties that these systems are seen to display to a striking degree.’]
  .slide
    +run_across
      .notes: :t
        Sam’s retort (in the paper) is to emphasise that his view makes some predictions ...
      p.rf.notes.show
        span ‘predictions ... whenever we find a module we will find that the content it processes is like 
        span that processed by other modules ... and unlike that processed by 
        span non-modules’ with respect to its 
        span.rf representational format
        span .
    .slide
      +blur('.right-half-white', 0)
      +fade('.right-half-white', 0)
      +blur('p:not(.rf), span:not(.rf)')
      +fade('p:not(.rf), span:not(.rf)')
      .notes: :t
        In what follows I want to focus on this notion of representational format.

+slide_middle({bkg:'representational_format_sounds.jpg', blend:'multiply'})
  p.source mindcater.com/...
  //- http://mindcater.com/wp-content/uploads/2013/07/Music-music-31055637-1920-1200.jpg
  .notes: :t
    It’s a familiar idea that things---sounds, say---can be specified using
    different representational formats.
  .notes: :t
    Differences in format matter because they affect performance: some things that
    are difficult or impossible in one format (changing pitch, say) can be 
    possible and perhaps even easy in another representational format.
  .slide
    +fade('img.bkg')
    +blur('img.bkg')
    p.center.show(style='margin-top:-2em;') Non-modular processes: multiple representational formats.
    .notes: :t
      I take it that nonmodular processes involve representations with different formats.
      In producing music, say, we might use artifactual representations with varying
      representational formats.
      And it seems reasonable to suppose that the mental representations involved might similarly
      have a variety of different representational formats.
    .notes: :t
      Or think about finding your way here to MindGrad, which could involve 
      combining use of written instructions with a paper map.
      Again, it seems reasonable to think that performing this task may also involve 
      mental representations with various formats.
    .notes: :t
      [This is the beginnings of an objection to something Sam writes:
      ‘critics of such a view seem required to hold the opposite: they must hold that the form and
      structure of the representations will remain constant across these systems, at least from the
      point of view of the systems doing the computing.’]
  .slide
    +blur('img.bkg', '10px')
    p.center.show.em-above Modules: one representational format or many?
    .notes: :t
      How are things with modules?  Is there a single format common to all the representations
      in modules, or can representational format differ from one module to the next?
    .notes: :t
      Sam’s view is most straightforwardly interpreted as denying this possibility.
      The claim is that modularity has an essence, and that essence is specified in part by
      a representational format that distinguishes modular from nonmodular processes.
      It would be simplest to develop this view on the assumption that there is
      one kind of rule-goverened computational process and one kind of
      representational format common to all modules.
    .notes: :t
      Sam himself appears to accept this view:
            ‘the essence of the modular kind might be a certain type of computational processing that is found
            in ... only ... the modular  ... and that entails and explains the
            manifestation of the superficial properties that these systems are seen to display to a striking
            degree.’
  .slide
    p.center vision -- navigation -- speech
    .notes: :t
      But it seems quite plausible that different modules will involve 
      different representational formats.  Consider the modules that Sam mentions:
      vision, speech and navigation.
    .notes: :t
      Vision presumably deals with the arrangement of surfaces and objects in space,
      whereas navigation is about landmarks and routes; 
      and speech concerns acoustic and bodily events.
    .notes: :t
      It is tempting to suppose that dealing with these things efficiently may require
      representations with different formats, and so that the
      representations in three modules will differ in format.
    .notes: :t
      Suppose this is right, that the underlying processes differ
      significantly in kind.
    .notes: :t
      Recall that it is the nature of their processes and representational formats which explain
      why modules evince features such as information encapsulation.
      This may well mean that these three modules---speech perception,
      vision and navigation---evince charcateristics associated with modularity such as encapsulation 
      and limited accessibilities to varying degrees.
    .notes: :t
      What follows from this possibility?
    .notes: :t
      [Sam also writes that
      ‘critics must convincingly show that different modules manifest their distinctive properties in
      quite different ways such that these differences must be explained by the underlying properties or
      mechanisms of the systems themselves’]

+slide_middle
  p.center Maybe there is no one such thing as modularity 
    span.hide.step2 ... but many?
  .slide
    +show('.step2')
    .notes: :t
      An immediate consequence, given Sam’s view, is that there would be no one
      such thing as modularity.
      After all, the unity of the modules depends on their having a single essence.
      But if the essence of modularity is specified by the nature of the processes
      and the format of the representations, then the idea that different putatively 
      modular systems involve different kinds of process and format seems to imply that
      they lack a single essence.
    .notes: :t
      This might seem like an objection to Sam’s view, but I’m not sure it is.
      I have the sense that I am merely taking the view that Sam has presented 
      and going one step further.
    .notes: :t
      After all, once we have the distinction between format and kind of process
      as a theoretical tool, why do we need there to be a single essence which all
      modules share?
    .notes: :t
      But I’m not sure.  Maybe this is a step too far.
      Let’s see what Sam says.
      Here are my three questions for him.
  .slide
    .hem-around-children
      p.indent 1. Is there a single representational format common to all modules?
      p.indent 2. If there weren’t, how would that alter your theory of what modules are?
      p.indent 3. Should we reject the claim that there is one essence of modularity?