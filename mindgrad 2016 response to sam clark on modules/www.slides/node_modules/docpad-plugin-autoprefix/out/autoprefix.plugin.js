// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var AutoprefixPlugin, _ref;
    return AutoprefixPlugin = (function(_super) {
      __extends(AutoprefixPlugin, _super);

      function AutoprefixPlugin() {
        _ref = AutoprefixPlugin.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      AutoprefixPlugin.prototype.name = 'autoprefix';

      AutoprefixPlugin.prototype.render = function(opts) {
        var content, err, file, inExtension, outExtension;
        inExtension = opts.inExtension, outExtension = opts.outExtension, content = opts.content, file = opts.file;
        if ((inExtension === 'autoprefix') && (outExtension === 'css' || outExtension === null)) {
          try {
            opts.content = require('autoprefixer').process(content).css;
          } catch (_error) {
            err = _error;
            return err;
          }
        }
      };

      AutoprefixPlugin.prototype.renderDocument = function(opts) {
        var content, err, file;
        content = opts.content, file = opts.file;
        if (file.get('autoprefix')) {
          try {
            opts.content = require('autoprefixer').process(content).css;
          } catch (_error) {
            err = _error;
            return err;
          }
        }
      };

      return AutoprefixPlugin;

    })(BasePlugin);
  };

}).call(this);
