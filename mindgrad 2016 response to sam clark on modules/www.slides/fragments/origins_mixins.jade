mixin davidson_inbetween(p)
  if typeof(p) === 'undefined' 
    - p = {}
  if !('step' in p)
    - p.step = false

  .photobox-bottom-right
    img.photo-right(src='/img/davidson.gif')
  .words: .container_12: .grid_12
    p
      span ‘if you want to describe what is going on in the head of the child when it has a few words which it utters in appropriate situations,  
      span.you-will-fail you will fail
      span.step2(class="#{p.step ? 'hide' : ''}")   for lack of the right sort of words of your own.
    p.step3(class="#{p.step ? 'hide' : ''}")
      span ‘We have many vocabularies for describing nature when we regard it as 
      span.highlight1 mindless
      span , and we have a mentalistic vocabulary for describing 
      span.highlight1 thought and intentional action
      span ; what we lack is a way of describing 
      span.highlight1 what is in between
      span ’
    p.right
      span (Davidson 1999, p. 11)
    if p.step
      .slide
        +highlight('.you-will-fail','red')
        .notes: :t
          I love this: Davidson says we will fail.  So encouraging.
          But why will we fail?
      .slide
        +show('.step2')
        .notes: :t
          Is he suggesting the issue is merely terminological?  Not quite ...
      .slide
        +show('.step3')
      .slide
        +invert('.highlight1')
    block
      
      
      
//- -------------
//- communication, non-linguistic
//- -------------


//- pointing
mixin to_comprehend()
  p To comprehend:
  ol
    li
      span know that this person is pointing to object X;
    li
      span.know.blur-except know
      span  that by so pointing she is attempting to 
      span.communicate.blur-except communicate
      span ; and 
    li
      span know that what she is attempting to communicate is that object X is there.
  block
  
mixin to_produce()
  p To produce:
  ol
    li
      span know how to point to object X;
    li
      span.know.blur-except know
      span  that by pointing to object X you can 
      span.communicate.blur-except communicate
      span  with this audience;
    li
      span know that what you can communicate is that object X is there.
  block

- origins = {}
- origins.simple_view = "the principles of object perception are things that we know or believe, and we generate expectations from these principles by a process of inference."


- qq = {}
- qq.q1 = 'How do humans come to meet the three requirements on knowledge of objects?'
- qq.q2 = 'What is the relation between the principles of object perception and infants’ looking behaviours?'
- qq.q2a = 'Given that the simple view is wrong, what is the relation between the principles of object perception and infants’ competence in segmenting objects, object permanence and tracking causal interactions?'
- qq.q2b = 'The principles of object perception result in ‘expectations’ in infants.  What is the nature of these expectations?'
- qq.q3 = 'What is the relation between adults’ and infants’ abilities concerning physical objects and their causal interactions?'


//- @depends unit_mixins
mixin slide_diagram_core_knowledge_to_concept
  +slide
    svg(xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', width='480px', height='403px', version='1.1', style='background-color: rgb(0, 0, 0);')
      g(transform='translate(0.5,0.5)')
        g.big-arrow.hide
          path(d='M 98 194 L 337 194 L 337 171 L 378 201 L 337 231 L 337 208 L 98 208 Z', fill='none', stroke='#ffffff', stroke-miterlimit='10', transform='rotate(90,238,201)', pointer-events='none')
        g.core-knowledge
          rect(x='143', y='1', width='190', height='70', rx='11', ry='11', fill='#000000', stroke='#ffffff', pointer-events='none')
          g(transform='translate(149,21)')
            switch
              foreignobject(pointer-events='all', width='178', height='32', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
                div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 12px; font-family: Lato; color: rgb(0, 0, 0); line-height: 1.26; vertical-align: top; width: 178px; white-space: normal; text-align: center;')
                  div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; text-align: inherit; text-decoration: inherit;')
                    font(color='#ffffff', style='font-size: 24px;') core knowledge
              text(x='89', y='22', fill='#000000', text-anchor='middle', font-size='12px', font-family='Lato') [Not supported by viewer]
        g.discriminate.hide
          rect(x='143', y='111', width='190', height='70', rx='11', ry='11', fill-opacity='0.8', fill='#000000', stroke='#ffffff', stroke-opacity='0.8', pointer-events='none')
          g(transform='translate(152,116)')
            switch
              foreignobject(pointer-events='all', width='172', height='62', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
                div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 12px; font-family: Lato; color: rgb(0, 0, 0); line-height: 1.26; vertical-align: top; width: 172px; white-space: normal; text-align: center;')
                  div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; text-align: inherit; text-decoration: inherit;')
                    font(color='#ffffff', style='font-size: 24px;')
                      | discriminate
                      br
                      | Xs from non-Xs
              text(x='86', y='37', fill='#000000', text-anchor='middle', font-size='12px', font-family='Lato') [Not supported by viewer]
        g.use-word.hide
          rect(x='143', y='221', width='190', height='70', rx='11', ry='11', fill-opacity='0.8', fill='#000000', stroke='#ffffff', stroke-opacity='0.8', pointer-events='none')
          g(transform='translate(151,226)')
            switch
              foreignobject(pointer-events='all', width='174', height='62', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
                div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 12px; font-family: Lato; color: rgb(0, 0, 0); line-height: 1.26; vertical-align: top; width: 174px; white-space: normal; text-align: center;')
                  div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; text-align: inherit; text-decoration: inherit;')
                    font(color='#ffffff')
                      span(style='font-size: 24px; line-height: 30.2399997711182px;')
                        | correctly
                        br
                        | use word for Xs
              text(x='87', y='37', fill='#000000', text-anchor='middle', font-size='12px', font-family='Lato') [Not supported by viewer]
        g.acquire-concept.hide
          rect(x='143', y='331', width='190', height='70', rx='11', ry='11', fill-opacity='0.8', fill='#000000', stroke='#ffffff', stroke-opacity='0.8', pointer-events='none')
          g(transform='translate(162,336)')
            switch
              foreignobject(pointer-events='all', width='152', height='62', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
                div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 12px; font-family: Lato; color: rgb(0, 0, 0); line-height: 1.26; vertical-align: top; width: 152px; white-space: normal; text-align: center;')
                  div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; text-align: inherit; text-decoration: inherit;')
                    font(color='#ffffff')
                      span(style='font-size: 24px; line-height: 30.2399997711182px;')
                        | acquire
                        br
                        | concept of Xs
              text(x='76', y='37', fill='#000000', text-anchor='middle', font-size='12px', font-family='Lato') [Not supported by viewer]
        g.because-experience.hide
          rect(x='356', y='149', width='140', height='105', fill='none', stroke='none', transform='rotate(-90,426,202)', pointer-events='none')
          g(transform='translate(358,172)rotate(-90,68,30)')
            switch
              foreignobject(pointer-events='all', width='136', height='62', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
                div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.26; vertical-align: top; overflow: hidden; max-height: 101px; max-width: 136px; width: 136px; white-space: normal; text-align: center;')
                  div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; text-align: inherit; text-decoration: inherit;')
                    font(color='#ffffff', face='Lato', style='font-size: 24px;') because experiecne
              text(x='68', y='37', fill='#000000', text-anchor='middle', font-size='12px', font-family='Helvetica') [Not supported by viewer]
          path(d='M 335 201 L 435 201', fill='none', stroke='#ffffff', stroke-width='4', stroke-miterlimit='10', transform='rotate(90,385,201)', pointer-events='none')
        g.because-reflection.hide
          rect(x='-16', y='261', width='140', height='105', fill='none', stroke='none', transform='rotate(90,54,314)', pointer-events='none')
          g(transform='translate(-14,284)rotate(90,68,30)')
            switch
              foreignobject(pointer-events='all', width='136', height='62', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
                div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.26; vertical-align: top; overflow: hidden; max-height: 101px; max-width: 136px; width: 136px; white-space: normal; text-align: center;')
                  div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; text-align: inherit; text-decoration: inherit;')
                    font(color='#ffffff', face='Lato', style='font-size: 24px;') because reflection
              text(x='68', y='37', fill='#000000', text-anchor='middle', font-size='12px', font-family='Helvetica') [Not supported by viewer]
          path(d='M 43 311 L 143 311', fill='none', stroke='#ffffff', stroke-width='4', stroke-miterlimit='10', transform='rotate(90,93,311)', pointer-events='none')

    +show_('.big-arrow')
    +show('.acquire-concept')
    .notes: :t
      Having core knowledge of something does not involve having any knowledge knowledge at all.
      Here I'm going to use the term ‘concept of X’ for that which enables one to have knowledge 
      of Xs.
      How do we get from core knowledge to concepts?
    +show('.discriminate')
    .notes: :t
      Core knowledge enables one to distinguish things. For example it enables on to distinguish
      those things which are blue from those which are not;
      it enables one to distinguish those events which are causal interactions from those 
      which are not;
      it enables one to distinguish those sets which have two members from others;
      and it enables one to distinguish different beliefs about the location of an object (say).
    .notes: :t
      (Here I'm using core knowledge in the broad, schematic sense to refer to representations
      which are knowledge-like but not knowledge.)
    +show('.use-word')
    .notes: :t
      I conjecture that core knowledge faciliates acquisition of the correct use of a word,
      perhaps very slowly.  The idea is that being able to discriminate things allows one to 
      apply a label to them.
    .notes: :t
      Importantly we can discriminate without having concepts.
      If one thought that all discrimination involved concepts, this picture would become circular.
    +show('.because-experience')
    .notes: :t
      How does core knowledge enable one to correctly use words?
      I think it modifies the overall phenomenal character of your experience,
      typically by generating phenomenal expectations (which I called them perceptual expectations 
      earlier in this version of the course).
      Tuning in to the perceptual expectations can take a long time, which is why there may be 
      a long interval between observing core knowledge and observing the correct use of words.
    +show('.acquire-concept')
    .notes: :t
      I also conjecture that using the word facilitates concept acquisition.
      Many people would probably agree.
      But how does it do this?
    +show('.because-reflection')
    .notes: :t
      My schematic suggestion is that using the word draws attention to all the things which are Xs.
      The concept is acquired when you are struck by the question,
      What do all these have in common?
    .notes: :t
      (Clearly this is not an account of how thinking gets started at all; the appeal
      to reflection should make this obvious.)
    .notes: :t
      We have quite good evidence for this picture in the cases of colour and number,
      and there is relevant evidence in the case of mindreading too.  (Also speech:
      phonological awareness is linked to literacy and the particulars of the written
      language learnt, so that alphabetic languages give a different profile --- alphabet is
      roughly labelling phonemes.)
    .notes: :t
      The question we've been looking at last week is how children come to correctly
      use words.
    block


